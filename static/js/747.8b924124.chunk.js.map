{"version":3,"file":"static/js/747.8b924124.chunk.js","mappings":"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","sources":["../node_modules/@mdx-js/react/lib/index.js","components/articles/mdx-components/index.tsx","components/articles/ArticlePage.tsx","articles/react-context-guide.mdx"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it‚Äôs no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it‚Äôs no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","// src/components/articles/mdx-components/index.tsx\r\nimport React from 'react';\r\nimport type { HTMLAttributes, ImgHTMLAttributes, AnchorHTMLAttributes } from 'react';\r\n\r\n\r\nexport const CodeExample: React.FC<{ children: React.ReactNode }> = ({ children }) => (\r\n  <div className=\"code-example\">\r\n    {children}\r\n  </div>\r\n);\r\n\r\n// Add other MDX-specific components here if needed\r\nexport const Note: React.FC<{ children: React.ReactNode }> = ({ children }) => (\r\n  <div className=\"note\">\r\n    <div className=\"note-icon\">üí°</div>\r\n    <div className=\"note-content\">{children}</div>\r\n  </div>\r\n);\r\n\r\nexport const Warning: React.FC<HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => (\r\n  <div className=\"article-warning\" {...props}>\r\n    <div className=\"warning-icon\">‚ö†Ô∏è</div>\r\n    <div className=\"warning-content\">{children}</div>\r\n  </div>\r\n);\r\n\r\nexport const Tip: React.FC<HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => (\r\n  <div className=\"article-tip\" {...props}>\r\n    <div className=\"tip-icon\">üí™</div>\r\n    <div className=\"tip-content\">{children}</div>\r\n  </div>\r\n);\r\n\r\ninterface DemoProps extends HTMLAttributes<HTMLDivElement> {\r\n  title?: string;\r\n}\r\n\r\nexport const Demo: React.FC<DemoProps> = ({ title, children, ...props }) => (\r\n  <div className=\"article-demo\" {...props}>\r\n    {title && <div className=\"demo-title\">{title}</div>}\r\n    <div className=\"demo-content\">{children}</div>\r\n  </div>\r\n);\r\n\r\nexport const H1: React.FC<HTMLAttributes<HTMLHeadingElement>> = (props) => (\r\n  <h1 className=\"article-h1\" {...props} />\r\n);\r\n\r\nexport const H2: React.FC<HTMLAttributes<HTMLHeadingElement>> = (props) => (\r\n  <h2 className=\"article-h2\" {...props} />\r\n);\r\n\r\nexport const H3: React.FC<HTMLAttributes<HTMLHeadingElement>> = (props) => (\r\n  <h3 className=\"article-h3\" {...props} />\r\n);\r\n\r\nexport const InlineCode: React.FC<HTMLAttributes<HTMLElement>> = (props) => (\r\n  <code className=\"inline-code\" {...props} />\r\n);\r\n\r\nexport const ArticleLink: React.FC<AnchorHTMLAttributes<HTMLAnchorElement>> = ({ children, ...props }) => (\r\n  <a\r\n    className=\"article-link\"\r\n    target=\"_blank\"\r\n    rel=\"noopener noreferrer\"\r\n    {...props}\r\n  >\r\n    {children}\r\n  </a>\r\n);\r\n\r\ninterface ArticleImageProps extends ImgHTMLAttributes<HTMLImageElement> {\r\n  caption?: string;\r\n}\r\n\r\nexport const ArticleImage: React.FC<ArticleImageProps> = ({ caption, alt, ...props }) => (\r\n  <figure className=\"article-figure\">\r\n    <img className=\"article-image\" alt={alt} {...props} />\r\n    {caption && <figcaption className=\"article-caption\">{caption}</figcaption>}\r\n  </figure>\r\n);","// src/components/articles/ArticlePage.tsx\r\nimport React from 'react';\r\nimport { MDXProvider } from '@mdx-js/react';\r\nimport { Link } from 'react-router-dom';\r\nimport { CodeExample, Note } from './mdx-components';\r\n\r\ninterface ArticleMetadata {\r\n  id: string;\r\n  title: string;\r\n  excerpt: string;\r\n  date: string;\r\n  author: string;\r\n  readTime: string;\r\n  tags: string[];\r\n  slug: string;\r\n}\r\n\r\ninterface ArticlePageProps {\r\n  metadata: ArticleMetadata;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst components = {\r\n  h1: (props: any) => <h1 className=\"article-h1\" {...props} />,\r\n  h2: (props: any) => <h2 className=\"article-h2\" {...props} />,\r\n  h3: (props: any) => <h3 className=\"article-h3\" {...props} />,\r\n  p: (props: any) => <p className=\"article-paragraph\" {...props} />,\r\n  blockquote: (props: any) => <blockquote className=\"article-blockquote\" {...props} />,\r\n  code: (props: any) => <code className=\"article-code\" {...props} />,\r\n  pre: (props: any) => <pre className=\"article-pre\" {...props} />,\r\n  CodeExample,\r\n  Note\r\n};\r\n\r\nconst ArticlePage: React.FC<ArticlePageProps> = ({ metadata, children }) => {\r\n  return (\r\n    <div className=\"creative-portfolio__article-detail\">\r\n      <div className=\"container\">\r\n        <Link to=\"/articles\" className=\"back-link\">\r\n          ‚Üê Back to Articles\r\n        </Link>\r\n        \r\n        <header className=\"article-header\">\r\n          <h1>{metadata.title}</h1>\r\n          <div className=\"meta\">\r\n            <span>{metadata.date}</span>\r\n            <span>{metadata.readTime} min read</span>\r\n            <span>{metadata.author}</span>\r\n          </div>\r\n          <div className=\"tags\">\r\n            {metadata.tags.map(tag => (\r\n              <span key={tag} className=\"tag\">{tag}</span>\r\n            ))}\r\n          </div>\r\n        </header>\r\n\r\n        <MDXProvider components={components}>\r\n          <article className=\"article-content\">\r\n            {children}\r\n          </article>\r\n        </MDXProvider>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArticlePage;"],"names":["MDXContext","React","useMDXComponents","components","contextComponents","_objectSpread","emptyObject","MDXProvider","_ref","allComponents","children","disableParentContext","Provider","value","CodeExample","_jsx","className","h1","props","h2","h3","p","blockquote","code","pre","Note","_ref2","_jsxs","metadata","Link","to","title","date","readTime","author","tags","map","tag","id","excerpt","slug","MDXLayout","ArticlePage","_components","strong","br"],"sourceRoot":""}