"use strict";(self.webpackChunkmy_app=self.webpackChunkmy_app||[]).push([[747],{747:(e,n,t)=>{t.r(n),t.d(n,{default:()=>C,metadata:()=>p});var r=t(550),s=t(555),o=t(14);const a=o.createContext({});function c(e){const n=o.useContext(a);return o.useMemo((()=>"function"===typeof e?e(n):(0,s.A)((0,s.A)({},n),e)),[n,e])}const i={};function l(e){let n,{components:t,children:r,disableParentContext:s}=e;return n=s?"function"===typeof t?t({}):t||i:c(t),o.createElement(a.Provider,{value:n},r)}var h=t(552);const d=e=>{let{children:n}=e;return(0,r.jsx)("div",{className:"code-example",children:n})},x={h1:e=>(0,r.jsx)("h1",(0,s.A)({className:"article-h1"},e)),h2:e=>(0,r.jsx)("h2",(0,s.A)({className:"article-h2"},e)),h3:e=>(0,r.jsx)("h3",(0,s.A)({className:"article-h3"},e)),p:e=>(0,r.jsx)("p",(0,s.A)({className:"article-paragraph"},e)),blockquote:e=>(0,r.jsx)("blockquote",(0,s.A)({className:"article-blockquote"},e)),code:e=>(0,r.jsx)("code",(0,s.A)({className:"article-code"},e)),pre:e=>(0,r.jsx)("pre",(0,s.A)({className:"article-pre"},e)),CodeExample:d,Note:e=>{let{children:n}=e;return(0,r.jsxs)("div",{className:"note",children:[(0,r.jsx)("div",{className:"note-icon",children:"\ud83d\udca1"}),(0,r.jsx)("div",{className:"note-content",children:n})]})}},u=e=>{let{metadata:n,children:t}=e;return(0,r.jsx)("div",{className:"creative-portfolio__article-detail",children:(0,r.jsxs)("div",{className:"container",children:[(0,r.jsx)(h.N_,{to:"/articles",className:"back-link",children:"\u2190 Back to Articles"}),(0,r.jsxs)("header",{className:"article-header",children:[(0,r.jsx)("h1",{children:n.title}),(0,r.jsxs)("div",{className:"meta",children:[(0,r.jsx)("span",{children:n.date}),(0,r.jsxs)("span",{children:[n.readTime," min read"]}),(0,r.jsx)("span",{children:n.author})]}),(0,r.jsx)("div",{className:"tags",children:n.tags.map((e=>(0,r.jsx)("span",{className:"tag",children:e},e)))})]}),(0,r.jsx)(l,{components:x,children:(0,r.jsx)("article",{className:"article-content",children:t})})]})})},p={id:"react-context-guide",title:"React Context & useContext() - A Comprehensive Study Guide",excerpt:"Master React Context and useContext() hook with this comprehensive guide.",date:"Feb 20, 2024",author:"Wameedh M. Ali",readTime:"10",tags:["React","Context API","Hooks","State Management"],slug:"react-context-guide"},m=({children:e})=>(0,r.jsx)(u,{metadata:p,children:e});function j(e){const n=Object.assign({h1:"h1",h2:"h2",p:"p",strong:"strong",h3:"h3",code:"code",pre:"pre",blockquote:"blockquote",br:"br"},c(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{children:"React Context & useContext() - Study Guide"}),"\n",(0,r.jsx)(n.h2,{children:"What is React Context?"}),"\n",(0,r.jsxs)(n.p,{children:["React Context is a way to ",(0,r.jsx)(n.strong,{children:"manage state globally"}),' without passing props manually at every level (a process known as "prop drilling"). It is useful for sharing data like themes, authentication status, or user preferences across multiple components.']}),"\n",(0,r.jsx)(n.h2,{children:"How Does Context Work?"}),"\n",(0,r.jsx)(n.p,{children:"Context provides a central store where values are stored and can be accessed by multiple components, avoiding deep prop drilling."}),"\n",(0,r.jsx)(n.h2,{children:"Creating and Using Context in React"}),"\n",(0,r.jsx)(n.p,{children:"Let's break it down step by step with an example."}),"\n",(0,r.jsx)(n.h3,{children:"1. Create a Context"}),"\n",(0,r.jsxs)(n.p,{children:["First, create a context using ",(0,r.jsx)(n.code,{children:"createContext()"}),"."]}),"\n",(0,r.jsx)(d,{children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { createContext } from 'react';\r\n\r\n// Create a Context for the theme (light or dark mode)\r\nconst ThemeContext = createContext('light');\r\n\r\nexport default ThemeContext;\n"})})}),"\n",(0,r.jsx)(n.h3,{children:"2. Provide Context in a Component"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"Provider"})," component wraps around parts of the app that need access to the context."]}),"\n",(0,r.jsx)(d,{children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import ThemeContext from './ThemeContext';\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeContext.Provider value=\"dark\">\r\n      <ChildComponent />\r\n    </ThemeContext.Provider>\r\n  );\r\n}\n"})})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note:"})," The ",(0,r.jsx)(n.code,{children:"value"})," prop in ",(0,r.jsx)(n.code,{children:"Provider"})," holds the data we want to share (e.g., ",(0,r.jsx)(n.code,{children:"'dark'"}),")."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{children:"3. Consume Context using useContext()"}),"\n",(0,r.jsxs)(n.p,{children:["Instead of passing props, use ",(0,r.jsx)(n.code,{children:"useContext()"})," to get the context value inside a child component."]}),"\n",(0,r.jsx)(d,{children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { useContext } from 'react';\r\nimport ThemeContext from './ThemeContext';\r\n\r\nfunction ChildComponent() {\r\n  const theme = useContext(ThemeContext);\r\n  return (\r\n    <div \r\n      style={{ \r\n        background: theme === 'dark' ? '#333' : '#fff',\r\n        color: theme === 'dark' ? '#fff' : '#000' \r\n      }}\r\n    >\r\n      Theme: {theme}\r\n    </div>\r\n  );\r\n}\n"})})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"useContext()"})," simplifies accessing context values without needing a Consumer wrapper."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{children:"When Should You Use Context?"}),"\n",(0,r.jsxs)(n.p,{children:["\u2705 When multiple components need access to the same data (e.g., themes, authentication, user settings)",(0,r.jsx)(n.br,{}),"\n","\u2705 When prop drilling becomes too complex",(0,r.jsx)(n.br,{}),"\n","\u2705 When state needs to be shared across different parts of the app"]}),"\n",(0,r.jsx)(n.h2,{children:"When Not to Use Context?"}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udeab For frequently updated values like animations or real-time data (use state management libraries like Redux or Zustand instead)",(0,r.jsx)(n.br,{}),"\n","\ud83d\udeab If the state is only used in a few components (props might be simpler)"]}),"\n",(0,r.jsx)(n.h2,{children:"Complex Example: Managing User Authentication"}),"\n",(0,r.jsx)(n.p,{children:"Let's see a more complex example of using Context to manage user authentication."}),"\n",(0,r.jsx)(n.h3,{children:"1. Create the Auth Context"}),"\n",(0,r.jsx)(d,{children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { createContext, useState } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n\r\n  const login = (username) => setUser({ name: username });\r\n  const logout = () => setUser(null);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default AuthContext;\n"})})}),"\n",(0,r.jsx)(n.h3,{children:"2. Wrap the App with AuthProvider"}),"\n",(0,r.jsx)(d,{children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { AuthProvider } from './AuthContext';\r\nimport Dashboard from './Dashboard';\r\n\r\nfunction App() {\r\n  return (\r\n    <AuthProvider>\r\n      <Dashboard />\r\n    </AuthProvider>\r\n  );\r\n}\n"})})}),"\n",(0,r.jsx)(n.h3,{children:"3. Use the Auth Context in a Component"}),"\n",(0,r.jsx)(d,{children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { useContext } from 'react';\r\nimport AuthContext from './AuthContext';\r\n\r\nfunction Dashboard() {\r\n  const { user, login, logout } = useContext(AuthContext);\r\n\r\n  return (\r\n    <div>\r\n      {user ? (\r\n        <>\r\n          <p>Welcome, {user.name}!</p>\r\n          <button onClick={logout}>Logout</button>\r\n        </>\r\n      ) : (\r\n        <button onClick={() => login('John Doe')}>Login</button>\r\n      )}\r\n    </div>\r\n  );\r\n}\n"})})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["Here, ",(0,r.jsx)(n.code,{children:"useContext(AuthContext)"})," allows components to access authentication state and actions (",(0,r.jsx)(n.code,{children:"login"})," and ",(0,r.jsx)(n.code,{children:"logout"}),") without prop drilling."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{children:"Summary"}),"\n",(0,r.jsxs)(n.p,{children:["\u2714 ",(0,r.jsx)(n.strong,{children:"Context"})," is a global state management tool for React",(0,r.jsx)(n.br,{}),"\n","\u2714 ",(0,r.jsx)(n.strong,{children:"useContext()"})," helps access Context values easily",(0,r.jsx)(n.br,{}),"\n","\u2714 ",(0,r.jsx)(n.strong,{children:"Provider"})," shares data with child components",(0,r.jsx)(n.br,{}),"\n","\u2714 Use Context to avoid unnecessary prop drilling",(0,r.jsx)(n.br,{}),"\n","\u2714 Context can manage complex state like user authentication"]}),"\n",(0,r.jsx)(n.p,{children:"\ud83d\ude80 Now you're ready to use Context effectively in React! \ud83c\udf89"})]})}const C=function(e={}){return(0,r.jsx)(m,Object.assign({},e,{children:(0,r.jsx)(j,e)}))}}}]);
//# sourceMappingURL=747.8b924124.chunk.js.map